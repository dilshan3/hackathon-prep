// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  email     String   @unique
  password  String
  name      String
  company   String
  role      String   @default("user")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  createdIssues  Issue[] @relation("IssueCreator")
  assignedIssues Issue[] @relation("IssueAssignee")
  refreshTokens  RefreshToken[]

  @@map("users")
}

model RefreshToken {
  id        String   @id @default(uuid()) @db.Uuid
  token     String   @unique
  userId    String   @db.Uuid
  expiresAt DateTime
  createdAt DateTime @default(now())

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("refresh_tokens")
}

model Issue {
  id             String     @id @default(uuid()) @db.Uuid
  trackingNumber String
  type           IssueType
  severity       Severity   @default(MEDIUM)
  status         Status     @default(OPEN)
  title          String
  description    String
  customerEmail  String
  customerPhone  String?
  assignedToId   String?    @db.Uuid
  createdById    String     @db.Uuid
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  resolvedAt     DateTime?

  // Relations
  assignedTo User? @relation("IssueAssignee", fields: [assignedToId], references: [id])
  createdBy  User  @relation("IssueCreator", fields: [createdById], references: [id])

  // Indexes for performance
  @@index([status])
  @@index([severity])
  @@index([type])
  @@index([createdAt])
  @@index([trackingNumber])
  @@map("issues")
}

enum IssueType {
  DELIVERY_DELAY
  PACKAGE_DAMAGED
  PACKAGE_LOST
  WRONG_ADDRESS
  DELIVERY_ATTEMPTED
  CUSTOMER_UNAVAILABLE
  WEATHER_DELAY
  VEHICLE_BREAKDOWN
  OTHER
}

enum Severity {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum Status {
  OPEN
  TRIAGED
  IN_PROGRESS
  ESCALATED
  RESOLVED
  CLOSED
}
